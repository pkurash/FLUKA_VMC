#ifndef FSUMCOU_H
#define FSUMCOU_H 1

#include "cfortran.h"
#include "Rtypes.h"

#include "Fdimpar.h"

extern "C" {
/*
*=== Sumcou ===========================================================*
*
*----------------------------------------------------------------------*
*                                                                      *
*     All additions wrt the original one are:                          *
*     Copyright (C) 2005-2008      by    Alfredo Ferrari & Paola Sala  *
*     All Rights Reserved.                                             *
*                                                                      *
*                                                                      *
*     SUMmary COUnters common for FLUKA9x/200x:                        *
*                                                                      *
*     (New version of the original STARS comon)                        *
*                                                                      *
*                                                                      *
*     Created on    15 may 1990    by    Alfredo Ferrari & Paola Sala  *
*                                                   Infn - Milan       *
*                                                                      *
*     Last change on  02-jul-08    by    Alfredo Ferrari               *
*                                                                      *
*                                                                      *
*     Variable description:                                            *
*                                                                      *
*        Ntstar = total number of stars generated (modulo 1000000000)  *
*        Nestar = total number of elastic interactions generated       *
*                (modulo 1000000000)                                   *
*        Neulow = total number of low energy neutron interactions      *
*                (modulo 1000000000)                                   *
*        Numdec = total number of decays (modulo 1000000000)           *
*        Numoph = total number of optical photons generated            *
*                (modulo 1000000000)                                   *
*        Mtstar = total number of stars generated / 100000000          *
*        Mestar = total number of elastic interactions generated       *
*               / 1000000000                                           *
*        Meulow = total number of low energy neutron interactions      *
*               / 1000000000                                           *
*        Mumdec = total number of decays / 1000000000                  *
*        Mumoph = total number of optical photons generated /1000000000*
*   Wneulw(k,j) = total weight of the low energy neutron interactions  *
*   Woptph(k,j) = total weight of generated optical photons            *
*   Westar(k,j) = weight of the stars generated by                     *
*                 different particle types                             *
*   Westop(k,j) = weight of particles of different types stopped       *
*   Wedaug(k,j) = weight of the decay products                         *
*   Wekill(k,j) = weight of the time-killed particles                  *
*   Wedecy(k,j) = weight of the particles decayed                      *
*   Weifis(k,j) = weight of high energy fissions generated by particles*
*                 of different kind                                    *
*   Deccts(k,j) = decay c tau scoring                                  *
*   Wdecct(k,j) = weight of the particles decayed for which a c tau    *
*                 scoring is done                                      *
*   Weprdc(k,j) = weight of produced particles of different kind       *
*   Wlwnsc(k,j) = weight of the low energy neutrons interaction secon- *
*                 daries                                               *
*   Wophsc(k,j) = weight of optical photons production/interaction     *
*                 secondaries                                          *
*        Weipri = total weight of the primaries handled                *
*        Westrs = total weight of the elastic interactions generated   *
*   Edpsco(i,j) = energy deposition scoring (j = 1: prompt particles,  *
*                                            j = 2: decay  particles)  *
*            Edpsco(1,j) = by ionisation                               *
*            Edpsco(2,j) = by pi-zeros and/or EM cascade               *
*            Edpsco(3,j) = by nuclear excitation (or nuclear recoil    *
*                          and heavies if the evaporation module is    *
*                          activated)                                  *
*            Edpsco(4,j) = by stopped particles                        *
*            Edpsco(5,j) = energy leaving the system                   *
*            Edpsco(6,j) = energy carried by discarded particles       *
*            Edpsco(7,j) = by residual excitation energy (only if the  *
*                          evaporation module is activated)            *
*            Edpsco(8,j) = by low energy neutrons (kerma due to low    *
*                          energy neutrons transport is in effect)     *
*            Edpsco(9,j) = energy carried by time killed particles     *
*            Edpsco(10,j)= energy wasted for nuclear binding energy    *
*                          effects for (low energy neutrons excluded)  *
*            Edpsco(11,j)= energy wasted for nuclear binding energy    *
*                          effects for low energy neutrons             *
*                                                                      *
*----------------------------------------------------------------------*
*
      COMMON / SUMCOU / WESTAR (-6:NALLWP,2), WESTOP (-6:NALLWP,2),
     &                  WEDAUG (-6:NALLWP,2), WEKILL (-6:NALLWP,2),
     &                  WEDECY (-6:NALLWP,2), WEIFIS (-6:NALLWP,2),
     &                  DECCTS (-6:NALLWP,2), WDECCT (-6:NALLWP,2),
     &                  WEPRDC (-6:NALLWP,2), WLWNSC (4,2),
     &                  WOPHSC (4,2), EDPSCO (11,2), WOPTPH, WNEULW,
     &                  WEIPRI, WESTRS,
     &                  NUMDEC, NTSTAR, NESTAR, NEULOW, NUMOPH, MUMDEC,
     &                  MTSTAR, MESTAR, MEULOW, MUMOPH
      SAVE / SUMCOU /
*/
typedef struct {
   Double_t westar[2][nallwp+7];
   Double_t westop[2][nallwp+7];
   Double_t wedaug[2][nallwp+7];
   Double_t wekill[2][nallwp+7];
   Double_t wedecy[2][nallwp+7];
   Double_t weifis[2][nallwp+7];
   Double_t deccts[2][nallwp+7];
   Double_t wdecct[2][nallwp+7];
   Double_t weprdc[2][nallwp+7];
   Double_t wlwnsc[2][4];
   Double_t wophsc[2][4];
   Double_t edpsco[2][11];
   Double_t woptph;
   Double_t wneulw;
   Double_t weipri;
   Double_t westrs;  
   Int_t    numdec;
   Int_t    ntstar;
   Int_t    nestar;
   Int_t    neulow;
   Int_t    numoph;
   Int_t    mumdec;
   Int_t    mtstar;
   Int_t    mestar;
   Int_t    meulow;
   Int_t    mumoph;
} sumcouCommon;
#define SUMCOU COMMON_BLOCK(SUMCOU,sumcou)
COMMON_BLOCK_DEF(sumcouCommon,SUMCOU);
}

#endif
